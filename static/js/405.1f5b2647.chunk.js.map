{"version":3,"file":"static/js/405.1f5b2647.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","api/Movie-api.js","components/searchbar/Searchbar.js","pages/movies/Movies.js"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","\nconst API_KEY = '01da1c68b81345f905c14aa4e6274718'; \n\nexport const getTrendingMovies = async() => {\n    return await fetch(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}&page=1`)\n            .then(response => {\n            return response.json();\n        })\n        .then(data => {\n            return data.results;\n        });\n}\n\nexport const getMovieById = async(movieId) => {\n    return await fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n            .then(response => {\n            return response.json();\n    })\n}\n\nexport const getMovieByTitle = async(movieTitle) => {\n    return await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${movieTitle}&page=1&include_adult=false`)\n            .then(response => {\n            return response.json();\n    })\n}\n\nexport const getMovieCast = async (movieId) => {\n    return await fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n        .then(response => {\n            return response.json();\n    })\n}\n\nexport const getMovieReviews= async (movieId) => {\n    return await fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n        .then(response => {\n            return response.json();\n    })\n}","import { useState } from \"react\";\n\nexport default function Searchbar({ changeQueryString }) {\n    const [movieName, setMovieName] = useState('');\n\n    const onFormSubmit = evt => {\n        evt.preventDefault();\n\n        if (movieName.trim() === '') return;\n        changeQueryString(movieName);\n    }\n\n    const onInputChange = evt => {\n        setMovieName(evt.currentTarget.value);\n    }\n\n     return (\n        <div className=\"searchbar\">\n             <form className=\"searchForm\" onSubmit={onFormSubmit}>\n                 \n                <input\n                    className=\"searchForm-input\"\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search movie\"\n                    onChange={onInputChange}\n                 />\n                 <button type=\"submit\" className=\"searchForm-button\">\n                <span className=\"searchForm-button-label\">Search</span>\n                </button>\n            </form>\n        </div>\n    )\n}","import { useEffect, useState } from \"react\";\nimport { useSearchParams, Link, useLocation } from \"react-router-dom\";\nimport { getMovieByTitle } from \"api/Movie-api\";\nimport Searchbar from \"components/searchbar/Searchbar\";\n\nexport default function Movies() {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const location = useLocation();\n    const movieName = searchParams.get(\"query\") ?? \"\";\n    const [movies, setMovies] = useState([]);\n    \n    \n    const updateQueryString = (query) => {\n        const nextParams = query !== \"\" ? { query } : {};\n        setSearchParams(nextParams);\n    };\n\n    useEffect(() => {\n        getMovieByTitle(movieName)\n            .then(movies => {\n                setMovies(movies.results);\n        })\n    }, [movieName]);\n\n    return (\n        <div>\n            <Searchbar changeQueryString={updateQueryString} />\n            <ul className=\"search-list\">\n                {movies.map(movie => \n                    <li className=\"search-list-item\" key={movie.id}>\n                        <Link to={`${movie.id}`} state={{ from: location }} >{movie.original_title}</Link>\n                    </li>\n                )}\n            </ul>\n            \n        </div>\n    );\n}"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","API_KEY","getTrendingMovies","fetch","response","json","data","results","getMovieById","movieId","getMovieByTitle","movieTitle","getMovieCast","getMovieReviews","Searchbar","changeQueryString","useState","movieName","setMovieName","className","onSubmit","evt","preventDefault","trim","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","Movies","useSearchParams","searchParams","setSearchParams","location","useLocation","get","movies","setMovies","useEffect","query","map","movie","to","id","state","from","original_title"],"sourceRoot":""}